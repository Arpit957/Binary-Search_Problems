//{ Driver Code Starts
// Initial template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template in C++

class Solution 
{
     bool allocationIsPossible(int A[],int n,int m,int mid){
        int given = 1;
        int pages = 0;
        
        for(int i=0;i<n;i++){
            if(A[i]+pages <= mid){
                pages+=A[i];
            }
            else{
                given++;
                if(given > m or A[i]>mid){
                    return false;
                }
                pages = 0;
                pages = A[i];
            }
        }
        
        return true;
    }
    public:
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        //code here
         int sum = 0;
        if(N<M)return -1;
        for(int i=0; i<N; i++)sum+=A[i];
        int l = 0, h = sum, res = -1;
        while(l <= h){
            int m = l+(h-l)/2;
            if(allocationIsPossible(A, N, M, m)){
                res = m;
                h = m-1;
            }else{
                l = m+1;
            }
        }return res;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int A[n];
        for(int i=0;i<n;i++){
            cin>>A[i];
        }
        int m;
        cin>>m;
        Solution ob;
        cout << ob.findPages(A, n, m) << endl;
    }
    return 0;
}

// } Driver Code Ends
